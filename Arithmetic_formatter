def arithmetic_arranger(problems, val=False):
    if len(problems) > 5:
        return "Error: Too many problems."

    operations = []
    numbers = []

    for problem in problems:
        parts = problem.split()
        num1, op, num2 = parts[0], parts[1], parts[2]
        if op not in ('+', '-'):
            return "Error: Operator must be '+' or '-'."
        if not (num1.isdigit() and num2.isdigit()):
            return "Error: Numbers must only contain digits."
        if len(num1) > 4 or len(num2) > 4:
            return "Error: Numbers cannot be more than four digits."
        operations.append(op)
        numbers.extend([num1, num2])

    top_row = ''
    bottom_row = ''
    dashes = ''
    solutions = ''

    for i in range(0, len(numbers), 2):
        num1, num2 = numbers[i], numbers[i + 1]
        op = operations[i // 2]
        space_width = max(len(num1), len(num2)) + 2

        top_row += num1.rjust(space_width)
        bottom_row += op + num2.rjust(space_width - 1)
        dashes += '-' * space_width

        if val:
            if op == '+':
                solution = str(int(num1) + int(num2))
            else:
                solution = str(int(num1) - int(num2))
            solutions += solution.rjust(space_width)

        if i < len(numbers) - 2:
            top_row += ' ' * 4
            bottom_row += ' ' * 4
            dashes += ' ' * 4
            if val:
                solutions += ' ' * 4

    arranged_problems = top_row + '\n' + bottom_row + '\n' + dashes
    if val:
        arranged_problems += '\n' + solutions

    return arranged_problems


# Example test
print(arithmetic_arranger(["3 + 855", "988 + 40"], True))
